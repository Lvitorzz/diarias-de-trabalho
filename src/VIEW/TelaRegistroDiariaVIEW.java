/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package VIEW;

import DTO.DiariaDTO;
import DAO.DiariaDAO;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalTime;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author vitor
 */
public class TelaRegistroDiariaVIEW extends javax.swing.JFrame {

    /**
     * Creates new form TelaInicialVIEW
     */
    MaskFormatter mfdata, mfHorarioInicio, mfHorarioFim;

    public TelaRegistroDiariaVIEW() {
        try {
            mfdata = new MaskFormatter("##/##/####");
            mfHorarioInicio = new MaskFormatter("##:##");
            mfHorarioFim = new MaskFormatter("##:##");
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(null, "Erro na criacao das mascaras");
        }

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jfData = new javax.swing.JFormattedTextField(mfdata);
        jLabel4 = new javax.swing.JLabel();
        btnRegistrar = new javax.swing.JButton();
        jfInicio = new javax.swing.JFormattedTextField(mfHorarioInicio);
        jfFim = new javax.swing.JFormattedTextField(mfHorarioInicio);
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtLocal = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescricaoServico = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        txtEmpresa = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtServico = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtRequisitante = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtExecutante = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtResponsavel = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtObservacao = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel1.setText("Registrar Diaria");

        jfData.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jfDataFocusLost(evt);
            }
        });
        jfData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jfDataActionPerformed(evt);
            }
        });

        jLabel4.setText("Data:");

        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        jfInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jfInicioActionPerformed(evt);
            }
        });

        jfFim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jfFimActionPerformed(evt);
            }
        });

        jLabel2.setText("Horario Inicio:");

        jLabel3.setText("Horario Fim:");

        jLabel5.setText("Local:");

        jLabel6.setText("Serviços executados:");

        txtDescricaoServico.setColumns(20);
        txtDescricaoServico.setRows(5);
        jScrollPane1.setViewportView(txtDescricaoServico);

        jLabel7.setText("Empresa:");

        txtEmpresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmpresaActionPerformed(evt);
            }
        });

        jLabel8.setText("Serviço:");

        jLabel9.setText("Requisitante:");

        jLabel10.setText("Executante:");

        jLabel11.setText("Responsavel:");

        jLabel12.setText("Observações:");

        txtObservacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtObservacaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(60, 60, 60))
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jfData, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jfInicio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jfFim, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtLocal)
                    .addComponent(txtEmpresa)
                    .addComponent(jLabel6)
                    .addComponent(btnRegistrar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addComponent(jLabel8)
                    .addComponent(txtServico)
                    .addComponent(jLabel9)
                    .addComponent(txtRequisitante)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(txtExecutante, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtResponsavel, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)))
                    .addComponent(jLabel12)
                    .addComponent(txtObservacao))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jfData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addGap(3, 3, 3)
                            .addComponent(jfFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(4, 4, 4)
                            .addComponent(jfInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtLocal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtServico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtRequisitante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtExecutante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtResponsavel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtObservacao, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnRegistrar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jfDataFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jfDataFocusLost


    }//GEN-LAST:event_jfDataFocusLost

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        String local, descricaoServico, horaFim, horaInicio, dataStr, empresa, requisitante, executante, servico, responsavel, observacao;
        if (validaData() && validaHorarios()) {
            horaFim = jfFim.getText();
            horaInicio = jfInicio.getText();
            local = txtLocal.getText();
            descricaoServico = txtDescricaoServico.getText();
            dataStr = jfData.getText();
            empresa = txtEmpresa.getText();
            requisitante = txtRequisitante.getText();
            executante = txtExecutante.getText();
            servico = txtServico.getText();
            responsavel = txtResponsavel.getText();
            observacao = txtObservacao.getText();

            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            DiariaDTO objdiariadto = new DiariaDTO();
            java.util.Date dataUtil;
            java.sql.Date dataSql;
            try {
                dataUtil = sdf.parse(dataStr);
                dataSql = new java.sql.Date(dataUtil.getTime());
                objdiariadto.setData(dataSql);
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao converter a data. Verifique o formato da data inserida.");
                return; // Retorna sem continuar o fluxo do código
            }

            objdiariadto.setLocal(local);
            objdiariadto.setDescricao_servico(descricaoServico);
            objdiariadto.setHorario_inicio(horaInicio);
            objdiariadto.setHorario_fim(horaFim);
            objdiariadto.setEmpresa(empresa);
            objdiariadto.setRequisitante(requisitante);
            objdiariadto.setExecutante(executante);
            objdiariadto.setServico(servico);
            objdiariadto.setResponsavel(responsavel);
            objdiariadto.setObservacao(observacao);
            
                    

            DiariaDAO objdiariadao = new DiariaDAO();
            objdiariadao.registrarDiaria(objdiariadto);
            JOptionPane.showMessageDialog(null, "Diaria Registrada");

        } else {
            JOptionPane.showMessageDialog(null, "Preencha os campos corretamente");
        }

    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void jfInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jfInicioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jfInicioActionPerformed

    private void jfDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jfDataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jfDataActionPerformed

    private void jfFimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jfFimActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jfFimActionPerformed

    private void txtEmpresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmpresaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmpresaActionPerformed

    private void txtObservacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtObservacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtObservacaoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaRegistroDiariaVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaRegistroDiariaVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaRegistroDiariaVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaRegistroDiariaVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaRegistroDiariaVIEW().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JFormattedTextField jfData;
    private javax.swing.JFormattedTextField jfFim;
    private javax.swing.JFormattedTextField jfInicio;
    private javax.swing.JTextArea txtDescricaoServico;
    private javax.swing.JTextField txtEmpresa;
    private javax.swing.JTextField txtExecutante;
    private javax.swing.JTextField txtLocal;
    private javax.swing.JTextField txtObservacao;
    private javax.swing.JTextField txtRequisitante;
    private javax.swing.JTextField txtResponsavel;
    private javax.swing.JTextField txtServico;
    // End of variables declaration//GEN-END:variables

    public static boolean isValidHorario(String horarioString) {
        try {
            String[] partes = horarioString.split(":");
            int horas = Integer.parseInt(partes[0]);
            int minutos = Integer.parseInt(partes[1]);

            if (horas >= 0 && horas <= 23 && minutos >= 0 && minutos <= 59) {
                LocalTime horario = LocalTime.of(horas, minutos);
                return true;
            } else {
                JOptionPane.showMessageDialog(null, "Horario invalido");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro na definição do horario");
        }

        return false;
    }

    public boolean validaHorarios() {
        String horaInicio, horaFim;
        horaInicio = jfInicio.getText();
        horaFim = jfFim.getText();
        if (isValidHorario(jfInicio.getText()) && isValidHorario(jfFim.getText())) {
            return true;
        } else {
            return false;
        }
    }

    public boolean validaData() {
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        sdf.setLenient(false);
        try {
            Date date = sdf.parse(jfData.getText());
            jfData.setValue(sdf.format(date));
            return true;
        } catch (ParseException e) {
            jfData.setText("");
            jfData.setValue(null);
            JOptionPane.showMessageDialog(null, "Data invalida");
            return false;

        }
    }
}
